#!/usr/bin/env -S ansible-playbook -K
# NOTE: Don't provide the playbook filename in the shebang. It is added automatically.
---

- name: Initialize master playbook
  hosts: master
  remote_user: ubuntu
  become: yes
  become_user: root
  gather_facts: true

  tasks:

    - name: Update apt cache
      apt:
        update_cache: yes

    ##################################
    # Empty file for Kubeadm configuring
    ##################################
    - name: Create an Empty file for Kubeadm configuring
      copy:
        content: ""
        dest: /etc/kubernetes/kubeadm-config.yaml
        force: no

    ##################################
    # Configure container runtime
    ##################################
    - name: Configure Kubernetes container runtime
      blockinfile:
        path: /etc/kubernetes/kubeadm-config.yaml
        block: |
          kind: ClusterConfiguration
          apiVersion: kubeadm.k8s.io/v1beta3
          controlPlaneEndpoint: "{{ external_ip }}:6443"
          clusterName: "{{ cluster_name }}"
          networking:
            podSubnet: 10.244.0.0/16
          controllerManager:
            extraArgs:
              bind-address: "0.0.0.0"
          scheduler:
              bind-address: "0.0.0.0"
          ---
          kind: KubeletConfiguration
          apiVersion: kubelet.config.k8s.io/v1beta1
          runtimeRequestTimeout: "15m"
          cgroupDriver: "systemd"
          systemReserved:
            cpu: "100m"
            memory: "350Mi"
          kubeReserved:
            cpu: "100m"
            memory: "50Mi"
          enforceNodeAllocatable:
            - pods
      vars:
        external_ip: "{{ hostvars['kube_master'].ansible_host }}"
        cluster_name: "stage-cluster"


    - name: Check if /var/lib/etcd exists
      ansible.builtin.command:
        cmd: test -d /var/lib/etcd
      register: etcd_dir
      ignore_errors: true

    - name: Debug etcd_dir to confirm structure
      ansible.builtin.debug:
        var: etcd_dir

    - name: Clear the contents of /var/lib/etcd if it exists and is the primary master
      ansible.builtin.file:
        path: /var/lib/etcd
        state: absent
      when:
        - etcd_dir is defined
        - etcd_dir.rc == 0

    - name: Recreate /var/lib/etcd directory on primary master
      ansible.builtin.file:
        path: /var/lib/etcd
        state: directory
        mode: '0700'

    ##################################
    # Initialize the cluster
    ##################################
    - name: Initialize the cluster
      shell: kubeadm init --config /etc/kubernetes/kubeadm-config.yaml --ignore-preflight-errors=NumCPU,Mem >> cluster_initialized.log
      args:
        chdir: /home/kube_user
        creates: /etc/kubernetes/admin.conf

    - name: Initialize admin cluster
      command: "kubeadm init --pod-network-cidr=10.244.0.0/16"
      args:
        creates: /etc/kubernetes/admin.conf # skip this task if the file already exists
      register: kube_init
      failed_when: "'error' in kube_init.stdout_lines"

    - name: show kube init info
      debug:
        var: kube_init

    ##################################
    # Create .kube directory
    ##################################
    - name: Create .kube directory
      file:
        path: /home/kube_user/.kube
        state: directory
        owner: kube_user
        group: kube_user
        mode: "0755"

    ##################################
    # Copy admin.conf
    ##################################
    - name: Copy admin.conf to User's kube config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/kube_user/.kube/config
        remote_src: yes
        owner: kube_user

    ##################################
    # Install Pod Network
    ##################################
    - name: Install Pod Network
      become: yes
      shell: |
        export KUBECONFIG=/etc/kubernetes/admin.conf
        kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml >> pod_network_setup.log
      args:
        chdir: $HOME
        creates: pod_network_setup.log


    - name: get calico networking
      get_url:
        url: https://projectcalico.docs.tigera.io/manifests/calico.yaml
        dest: "/home/kube_user/calico.yaml"

    - name: apply calico networking
      become: yes
      become_user: kube_user
      command: kubectl apply -f "/home/kube_user/calico.yaml"

    - name: get dashboard
      get_url:
        url: https://raw.githubusercontent.com/kubernetes/dashboard/v2.5.0/aio/deploy/recommended.yaml
        dest: "/home/kube_user/dashboard.yaml"

    - name: apply dashboard
      become: yes
      become_user: kube_user
      command: kubectl apply -f "/home/kube_user/dashboard.yaml"